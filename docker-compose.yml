version: '3.5'
services:
  dev:
    user: root
    build:
      dockerfile: spark.Dockerfile
      context: .
    volumes:
      - ./:/spftest/
    container_name: spftest_dev
    working_dir: /spftest

  mock-server:
    image: mockserver/mockserver:mockserver-5.15.0
    command: -serverPort 1080
    ports:
      - '1080:1080'
    environment:
      - MOCKSERVER_LIVENESS_HTTP_GET_PATH=/health

  fhir:
    depends_on:
      - mongo
      - keycloak
    image: imranq2/node-fhir-server-mongo:5.10.21
    # To use local fhir code, comment above line and uncomment below
#    build:
#      dockerfile: Dockerfile
#      context: ../node-fhir-server-mongo
    environment:
      SERVER_PORT: 3000
      MONGO_URL: mongodb://mongo:27017
      AUDIT_EVENT_MONGO_DB_NAME: fhir
      AUDIT_EVENT_MONGO_URL: mongodb://mongo:27017
      RESOURCE_SERVER: http://fhir:3000/
      AUTH_SERVER_URI: http://myauthzserver.com
      AUTH_CUSTOM_SCOPE: "custom:scope"
      CLIENT_ID: bwell-client-id
      CLIENT_SECRET: bwell-secret
      INTROSPECTION_URL: https://myauthzserver.com/introspect
      MONGO_DB_NAME: fhir
      AUTH_CONFIGURATION_URI: http://keycloak:8080/realms/bwell-realm/.well-known/openid-configuration
      AUTH_JWKS_URL: http://keycloak:8080/realms/bwell-realm/protocol/openid-connect/certs
      EXTERNAL_AUTH_JWKS_URLS: http://keycloak:8080/realms/bwell-realm/protocol/openid-connect/certs
      RETURN_BUNDLE: "1"
      VALIDATE_SCHEMA: "1"
      ENABLE_GRAPHQL: "1"
      ENABLE_GRAPHQLV2: "1"
      LOGLEVEL: "DEBUG"
      SET_INDEX_HINTS: 0
      CREATE_INDEX_ON_COLLECTION_CREATION: 1
      USE_TWO_STEP_SEARCH_OPTIMIZATION: "0"
      STREAM_RESPONSE: "1"
    ports:
      - '3000:3000'
    command: yarn start
    restart: on-failure
    healthcheck:
        test: ["CMD-SHELL", "wget --spider --quiet localhost:3000/health || exit 1"]

  mongo:
      image: mongo:8.0.4
      ports:
          - '27017:27017'
      environment:
          - ALLOW_EMPTY_PASSWORD=yes
      volumes:
          - mongo_data:/data/db
      healthcheck:
          test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet

  keycloak:
    # https://github.com/keycloak/keycloak/releases
    image: quay.io/keycloak/keycloak:25.0.1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      # The below settings are for test data creation
      # This is the user and password that will be created in the realm
      MY_ADMIN_USER_NAME: admin
      MY_ADMIN_USER_PASSWORD: password
      MY_ADMIN_USER_SCOPE: user/*.* access/*.*
      MY_ADMIN_USER_TOKEN_USERNAME: admin
      # This is the user and password that will be created in the realm
      MY_USER_NAME: tester
      MY_USER_PASSWORD: password
      MY_USER_SCOPE: user/*.* access/*.* patient/*.read
      MY_USER_TOKEN_USERNAME: tester
      # This is the client setup
      CLIENT_ID: bwell-client-id
      CLIENT_SECRET: bwell-secret
      # This is the service account that will be created in the realm
      SERVICE_ACCOUNT_NAME: service-account
      SERVICE_ACCOUNT_PASSWORD: password
      SERVICE_ACCOUNT_SCOPE: user/*.* access/*.*
      # These are the custom claims that will be added to any generated token
      MY_USER_CLIENT_PERSON_ID: 0b2ad38a-20bc-5cf5-9739-13f242b05892
      MY_USER_CLIENT_PATIENT_ID: 22aa18af-af51-5799-bc55-367c22c85407
      MY_USER_BWELL_PERSON_ID: 0eb80391-0f61-5ce6-b221-a5428f2f38a7
      MY_USER_BWELL_PATIENT_ID: patient2
      KC_FEATURES: dynamic-scopes
    ports:
      - "8080:8080"
    command: ["start-dev", "--import-realm", "--verbose"]
    volumes:
      - ./keycloak-config/realm-import.json:/opt/keycloak/data/import/realm-import.json

volumes:
  mongo_data:
